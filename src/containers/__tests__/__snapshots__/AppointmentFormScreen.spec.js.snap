// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppointmentFormScreen renders an AppointmentForm correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ReduxForm
    initialValues={
        Object {
            "enddate": "2017-09-15T22:00:00.000Z",
            "endtime": "2017-06-03T21:00:00.000Z",
            "recurrence": "WEEKLY",
            "startdate": "2017-06-02T22:00:00.000Z",
            "starttime": "2017-06-03T20:00:00.000Z",
          }
    }
    onRecurrencePress={[Function]}
    onSubmit={[Function]}
/>,
  "nodes": Array [
    <ReduxForm
      initialValues={
            Object {
                  "enddate": "2017-09-15T22:00:00.000Z",
                  "endtime": "2017-06-03T21:00:00.000Z",
                  "recurrence": "WEEKLY",
                  "startdate": "2017-06-02T22:00:00.000Z",
                  "starttime": "2017-06-03T20:00:00.000Z",
                }
      }
      onRecurrencePress={[Function]}
      onSubmit={[Function]}
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <AppointmentFormScreen
        dispatch={[Function]}
        navigator={
                Object {
                        "dismissAllModals": [Function],
                        "dismissLightBox": [Function],
                        "dismissModal": [Function],
                        "handleDeepLink": [Function],
                        "pop": [Function],
                        "popToRoot": [Function],
                        "push": [Function],
                        "resetTo": [Function],
                        "setButtons": [Function],
                        "setOnNavigatorEvent": [Function],
                        "setTitle": [Function],
                        "showLightBox": [Function],
                        "showModal": [Function],
                        "toggleNavBar": [Function],
                      }
        }
        onSubmit={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": AppointmentFormScreen {
        "_getInitialValues": [Function],
        "_handleNavigatorEvent": [Function],
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "dispatch": [Function],
          "navigator": Object {
            "dismissAllModals": [Function],
            "dismissLightBox": [Function],
            "dismissModal": [Function],
            "handleDeepLink": [Function],
            "pop": [Function],
            "popToRoot": [Function],
            "push": [Function],
            "resetTo": [Function],
            "setButtons": [Function],
            "setOnNavigatorEvent": [Function],
            "setTitle": [Function],
            "showLightBox": [Function],
            "showModal": [Function],
            "toggleNavBar": [Function],
          },
          "onSubmit": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ReduxForm
          initialValues={
                    Object {
                              "enddate": "2017-09-15T22:00:00.000Z",
                              "endtime": "2017-06-03T21:00:00.000Z",
                              "recurrence": "WEEKLY",
                              "startdate": "2017-06-02T22:00:00.000Z",
                              "starttime": "2017-06-03T20:00:00.000Z",
                            }
          }
          onRecurrencePress={[Function]}
          onSubmit={[Function]}
/>,
        "_debugID": 2,
        "_renderedOutput": <ReduxForm
          initialValues={
                    Object {
                              "enddate": "2017-09-15T22:00:00.000Z",
                              "endtime": "2017-06-03T21:00:00.000Z",
                              "recurrence": "WEEKLY",
                              "startdate": "2017-06-02T22:00:00.000Z",
                              "starttime": "2017-06-03T20:00:00.000Z",
                            }
          }
          onRecurrencePress={[Function]}
          onSubmit={[Function]}
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <AppointmentFormScreen
    dispatch={[Function]}
    navigator={
        Object {
            "dismissAllModals": [Function],
            "dismissLightBox": [Function],
            "dismissModal": [Function],
            "handleDeepLink": [Function],
            "pop": [Function],
            "popToRoot": [Function],
            "push": [Function],
            "resetTo": [Function],
            "setButtons": [Function],
            "setOnNavigatorEvent": [Function],
            "setTitle": [Function],
            "showLightBox": [Function],
            "showModal": [Function],
            "toggleNavBar": [Function],
          }
    }
    onSubmit={[Function]}
/>,
}
`;
